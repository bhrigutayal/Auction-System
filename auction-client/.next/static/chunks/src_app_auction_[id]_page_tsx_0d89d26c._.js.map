{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Bhrigu/Desktop/auction-client/src/app/auction/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'next/navigation';\r\nimport io from 'socket.io-client';\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport CountdownTimer from '@/components/CountdownTimer';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport Link from 'next/link';\r\n\r\nconst SOCKET_URL = 'http://localhost:3001';\r\n\r\nexport default function AuctionPage() {\r\n  const params = useParams();\r\n  const auctionId = params.id;\r\n  const socketRef = useRef(null);\r\n  const { user, session } = useAuth();\r\n\r\n  const [auction, setAuction] = useState(null);\r\n  const [highestBid, setHighestBid] = useState(0);\r\n  const [bidAmount, setBidAmount] = useState('');\r\n  const [isAuctionEnded, setIsAuctionEnded] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [sellerDecision, setSellerDecision] = useState(null);\r\n  const [counterOffer, setCounterOffer] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!auctionId) return;\r\n\r\n    const getAuctionDetails = async () => {\r\n      const { data, error } = await supabase\r\n        .from('auctions')\r\n        .select('*')\r\n        .eq('id', auctionId)\r\n        .single();\r\n\r\n      if (error || !data) {\r\n        console.error('Error fetching auction details:', error);\r\n        toast.error(\"Could not load auction details.\");\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const formattedData = {\r\n        ...data,\r\n        highestBid: data.highest_bid || data.starting_price,\r\n        imageUrl: data.image_url || `https://placehold.co/600x400/gray/white?text=${data.item_name.replace(/\\s/g, '+')}`\r\n      };\r\n\r\n      setAuction(formattedData);\r\n      setHighestBid(formattedData.highestBid);\r\n      setBidAmount(formattedData.highestBid + formattedData.bid_increment);\r\n      if (new Date(formattedData.end_time) <= new Date()) {\r\n        setIsAuctionEnded(true);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    getAuctionDetails();\r\n\r\n    if (session) {\r\n      socketRef.current = io(SOCKET_URL, {\r\n        auth: { token: session.access_token },\r\n        transports: ['websocket'] \r\n      });\r\n\r\n      socketRef.current.on('connect_error', (err) => {\r\n        toast.error(`Socket connection failed: ${err.message}`);\r\n      });\r\n\r\n      socketRef.current.emit('joinAuction', auctionId);\r\n\r\n      socketRef.current.on('outbidNotification', ({ user: outbidUserId }) => {\r\n        if (user && outbidUserId === user.id) {\r\n          toast.error(\"You've been outbid!\");\r\n        }\r\n      });\r\n    }\r\n\r\n    const channel = supabase\r\n      .channel(`auction-${auctionId}`)\r\n      .on('postgres_changes', { event: 'UPDATE', schema: 'public', table: 'auctions', filter: `id=eq.${auctionId}` },\r\n        (payload) => {\r\n          const newHighestBid = payload.new.highest_bid;\r\n          // Use a functional update to avoid stale state issues\r\n          setHighestBid(currentHighestBid => {\r\n              if (newHighestBid > currentHighestBid) {\r\n                  toast.success(`New highest bid: $${newHighestBid}`);\r\n                  return newHighestBid;\r\n              }\r\n              return currentHighestBid;\r\n          });\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    return () => {\r\n      supabase.removeChannel(channel);\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  // *** THIS IS THE FIX ***\r\n  // Removed `highestBid` and `user` from the dependency array to prevent reconnects\r\n  }, [auctionId, session]);\r\n\r\n  const handlePlaceBid = (e) => {\r\n    e.preventDefault();\r\n    if (!user) {\r\n      return toast.error(\"Please log in to place a bid.\");\r\n    }\r\n    const newBid = parseFloat(bidAmount);\r\n    if (isNaN(newBid) || newBid < highestBid + auction.bid_increment) {\r\n      return toast.error(`Your bid must be at least $${highestBid + auction.bid_increment}.`);\r\n    }\r\n    socketRef.current.emit('placeBid', {\r\n      auctionId,\r\n      bidAmount: newBid,\r\n    });\r\n    setBidAmount(newBid + auction.bid_increment);\r\n  };\r\n\r\n  const handleAuctionEnd = () => {\r\n    setIsAuctionEnded(true);\r\n    toast.info(\"The auction has ended!\");\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div className=\"text-center p-10 font-semibold\">Loading Auction...</div>;\r\n  }\r\n  if (!auction) {\r\n    return <div className=\"text-center p-10 font-semibold\">Auction not found.</div>;\r\n  }\r\n\r\n  const isSeller = user && auction && user.id === auction.seller_id;\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto\">\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12\">\r\n        <div className=\"bg-white p-4 rounded-lg shadow-lg\">\r\n          <img src={auction.imageUrl} alt={auction.item_name} className=\"w-full h-auto object-cover rounded-md\" />\r\n        </div>\r\n        <div className=\"bg-white p-8 rounded-lg shadow-lg\">\r\n          <h1 className=\"text-4xl font-bold mb-2\">{auction.item_name}</h1>\r\n          <p className=\"text-gray-600 mb-6\">{auction.description}</p>\r\n          <div className=\"bg-gray-100 p-6 rounded-lg mb-6\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <span className=\"text-lg font-medium text-gray-700\">Current Highest Bid</span>\r\n              <span className=\"text-3xl font-bold text-blue-600\">${highestBid.toLocaleString()}</span>\r\n            </div>\r\n            <div className=\"flex justify-between items-center\">\r\n              <span className=\"text-lg font-medium text-gray-700\">Auction Ends In</span>\r\n              <CountdownTimer endTime={auction.end_time} onEnd={handleAuctionEnd} />\r\n            </div>\r\n          </div>\r\n          {!isAuctionEnded ? (\r\n            user ? (\r\n              <form onSubmit={handlePlaceBid}>\r\n                <label htmlFor=\"bid\" className=\"block text-sm font-medium text-gray-700 mb-1\">Your Bid (min. ${highestBid + auction.bid_increment})</label>\r\n                <div className=\"flex gap-4\">\r\n                  <input id=\"bid\" type=\"number\" value={bidAmount} onChange={(e) => setBidAmount(e.target.value)} className=\"flex-grow p-3 border rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\" step={auction.bid_increment} min={highestBid + auction.bid_increment} />\r\n                  <button type=\"submit\" className=\"bg-blue-600 text-white font-bold py-3 px-8 rounded-md hover:bg-blue-700 transition-all shadow-md\">Place Bid</button>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <div className=\"text-center p-4 bg-gray-100 rounded-md\">\r\n                <p className=\"font-semibold\">Please <Link href=\"/login\" className=\"text-blue-600 hover:underline\">log in</Link> to place a bid.</p>\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div className=\"text-center p-6 bg-yellow-100 border-l-4 border-yellow-500 rounded-r-lg\">\r\n              <h3 className=\"text-2xl font-bold text-yellow-800\">Auction Ended</h3>\r\n              <p className=\"text-lg mt-2\">Final Bid: <span className=\"font-bold\">${highestBid.toLocaleString()}</span></p>\r\n            </div>\r\n          )}\r\n          {isAuctionEnded && isSeller && !sellerDecision && (\r\n            <div className=\"mt-8 p-6 bg-green-50 border-green-400 border rounded-lg\">\r\n              <h3 className=\"text-xl font-bold mb-4 text-center\">Seller Actions</h3>\r\n              <p className=\"text-center mb-4\">The highest bid was ${highestBid}. What would you like to do?</p>\r\n              <div className=\"flex justify-center gap-4\">\r\n                <button onClick={() => setSellerDecision('accepted')} className=\"bg-green-600 text-white px-6 py-2 rounded-md hover:bg-green-700\">Accept Bid</button>\r\n                <button onClick={() => setSellerDecision('rejected')} className=\"bg-red-600 text-white px-6 py-2 rounded-md hover:bg-red-700\">Reject Bid</button>\r\n                <button onClick={() => setSellerDecision('counter')} className=\"bg-yellow-500 text-white px-6 py-2 rounded-md hover:bg-yellow-600\">Counter-Offer</button>\r\n              </div>\r\n              {sellerDecision === 'counter' && (\r\n                <div className=\"mt-4\">\r\n                  <input type=\"number\" placeholder=\"Enter counter-offer amount\" className=\"w-full p-2 border rounded\" onChange={(e) => setCounterOffer(e.target.value)} />\r\n                  <button className=\"w-full mt-2 bg-blue-600 text-white p-2 rounded hover:bg-blue-700\">Send Counter-Offer</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}